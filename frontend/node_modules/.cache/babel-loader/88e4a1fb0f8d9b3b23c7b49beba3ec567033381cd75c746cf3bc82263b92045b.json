{"ast":null,"code":"// Predict.js (React component)\nimport React,{useState}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Predict(){const[excerpt,setExcerpt]=useState('');const[prediction,setPrediction]=useState(null);const handlePredict=async()=>{try{const response=await fetch(\"http://127.0.0.1:5000/predict\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({excerpt})});if(response.ok){const data=await response.json();setPrediction(data.prediction);}else{console.error(\"Error in prediction request\");}}catch(error){console.error(\"Error connecting to backend:\",error);}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Text Prediction\"}),/*#__PURE__*/_jsx(\"textarea\",{value:excerpt,onChange:e=>setExcerpt(e.target.value),placeholder:\"Enter text here\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handlePredict,children:\"Predict\"}),prediction!==null&&/*#__PURE__*/_jsxs(\"p\",{children:[\"Predicted Value: Grade \",prediction.toFixed(0)]})]});}export default Predict;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","Predict","excerpt","setExcerpt","prediction","setPrediction","handlePredict","response","fetch","method","headers","body","JSON","stringify","ok","data","json","console","error","children","value","onChange","e","target","placeholder","onClick","toFixed"],"sources":["C:/Users/yxl21/Documents/School/hacktx2024/frontend/src/components/Predict.js"],"sourcesContent":["// Predict.js (React component)\r\n\r\nimport React, { useState } from 'react';\r\n\r\nfunction Predict() {\r\n    const [excerpt, setExcerpt] = useState('');\r\n    const [prediction, setPrediction] = useState(null);\r\n\r\n    const handlePredict = async () => {\r\n        try {\r\n            const response = await fetch(\"http://127.0.0.1:5000/predict\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({ excerpt }),\r\n            });\r\n\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                setPrediction(data.prediction);\r\n            } else {\r\n                console.error(\"Error in prediction request\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error connecting to backend:\", error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Text Prediction</h1>\r\n            <textarea\r\n                value={excerpt}\r\n                onChange={(e) => setExcerpt(e.target.value)}\r\n                placeholder=\"Enter text here\"\r\n            />\r\n            <button onClick={handlePredict}>Predict</button>\r\n            {prediction !== null && (\r\n                <p>Predicted Value: Grade {prediction.toFixed(0)}</p>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Predict;\r\n"],"mappings":"AAAA;AAEA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAExC,QAAS,CAAAC,OAAOA,CAAA,CAAG,CACf,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGP,QAAQ,CAAC,EAAE,CAAC,CAC1C,KAAM,CAACQ,UAAU,CAAEC,aAAa,CAAC,CAAGT,QAAQ,CAAC,IAAI,CAAC,CAElD,KAAM,CAAAU,aAAa,CAAG,KAAAA,CAAA,GAAY,CAC9B,GAAI,CACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,+BAA+B,CAAE,CAC1DC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACL,cAAc,CAAE,kBACpB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEX,OAAQ,CAAC,CACpC,CAAC,CAAC,CAEF,GAAIK,QAAQ,CAACO,EAAE,CAAE,CACb,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAR,QAAQ,CAACS,IAAI,CAAC,CAAC,CAClCX,aAAa,CAACU,IAAI,CAACX,UAAU,CAAC,CAClC,CAAC,IAAM,CACHa,OAAO,CAACC,KAAK,CAAC,6BAA6B,CAAC,CAChD,CACJ,CAAE,MAAOA,KAAK,CAAE,CACZD,OAAO,CAACC,KAAK,CAAC,8BAA8B,CAAEA,KAAK,CAAC,CACxD,CACJ,CAAC,CAED,mBACIlB,KAAA,QAAAmB,QAAA,eACIrB,IAAA,OAAAqB,QAAA,CAAI,iBAAe,CAAI,CAAC,cACxBrB,IAAA,aACIsB,KAAK,CAAElB,OAAQ,CACfmB,QAAQ,CAAGC,CAAC,EAAKnB,UAAU,CAACmB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAC5CI,WAAW,CAAC,iBAAiB,CAChC,CAAC,cACF1B,IAAA,WAAQ2B,OAAO,CAAEnB,aAAc,CAAAa,QAAA,CAAC,SAAO,CAAQ,CAAC,CAC/Cf,UAAU,GAAK,IAAI,eAChBJ,KAAA,MAAAmB,QAAA,EAAG,yBAAuB,CAACf,UAAU,CAACsB,OAAO,CAAC,CAAC,CAAC,EAAI,CACvD,EACA,CAAC,CAEd,CAEA,cAAe,CAAAzB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}