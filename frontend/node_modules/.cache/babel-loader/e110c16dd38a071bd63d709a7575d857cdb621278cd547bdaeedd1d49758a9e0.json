{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yxl21\\\\Documents\\\\School\\\\hacktx2024\\\\src\\\\components\\\\Predict.js\",\n  _s = $RefreshSig$();\n// Predict.js (React component)\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Predict() {\n  _s();\n  const [excerpt, setExcerpt] = useState('');\n  const [prediction, setPrediction] = useState(null);\n  const handlePredict = async () => {\n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/predict\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          excerpt\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setPrediction(data.prediction);\n      } else {\n        console.error(\"Error in prediction request\");\n      }\n    } catch (error) {\n      console.error(\"Error connecting to backend:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Text Prediction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: excerpt,\n      onChange: e => setExcerpt(e.target.value),\n      placeholder: \"Enter text here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePredict,\n      children: \"Predict\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), prediction !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Predicted Value: grade \", prediction.toFixed(0)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_s(Predict, \"i2tJXInCajbnt/88CHketAMdO5Q=\");\n_c = Predict;\nexport default Predict;\nvar _c;\n$RefreshReg$(_c, \"Predict\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Predict","_s","excerpt","setExcerpt","prediction","setPrediction","handlePredict","response","fetch","method","headers","body","JSON","stringify","ok","data","json","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","onClick","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/yxl21/Documents/School/hacktx2024/src/components/Predict.js"],"sourcesContent":["// Predict.js (React component)\r\n\r\nimport React, { useState } from 'react';\r\n\r\nfunction Predict() {\r\n    const [excerpt, setExcerpt] = useState('');\r\n    const [prediction, setPrediction] = useState(null);\r\n\r\n    const handlePredict = async () => {\r\n        try {\r\n            const response = await fetch(\"http://127.0.0.1:5000/predict\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({ excerpt }),\r\n            });\r\n\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                setPrediction(data.prediction);\r\n            } else {\r\n                console.error(\"Error in prediction request\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error connecting to backend:\", error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Text Prediction</h1>\r\n            <textarea\r\n                value={excerpt}\r\n                onChange={(e) => setExcerpt(e.target.value)}\r\n                placeholder=\"Enter text here\"\r\n            />\r\n            <button onClick={handlePredict}>Predict</button>\r\n            {prediction !== null && (\r\n                <p>Predicted Value: grade {prediction.toFixed(0)}</p>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Predict;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAElD,MAAMS,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,EAAE;QAC1DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEX;QAAQ,CAAC;MACpC,CAAC,CAAC;MAEF,IAAIK,QAAQ,CAACO,EAAE,EAAE;QACb,MAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;QAClCX,aAAa,CAACU,IAAI,CAACX,UAAU,CAAC;MAClC,CAAC,MAAM;QACHa,OAAO,CAACC,KAAK,CAAC,6BAA6B,CAAC;MAChD;IACJ,CAAC,CAAC,OAAOA,KAAK,EAAE;MACZD,OAAO,CAACC,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACxD;EACJ,CAAC;EAED,oBACInB,OAAA;IAAAoB,QAAA,gBACIpB,OAAA;MAAAoB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBxB,OAAA;MACIyB,KAAK,EAAEtB,OAAQ;MACfuB,QAAQ,EAAGC,CAAC,IAAKvB,UAAU,CAACuB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC5CI,WAAW,EAAC;IAAiB;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eACFxB,OAAA;MAAQ8B,OAAO,EAAEvB,aAAc;MAAAa,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC/CnB,UAAU,KAAK,IAAI,iBAChBL,OAAA;MAAAoB,QAAA,GAAG,yBAAuB,EAACf,UAAU,CAAC0B,OAAO,CAAC,CAAC,CAAC;IAAA;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CACvD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAACtB,EAAA,CAvCQD,OAAO;AAAA+B,EAAA,GAAP/B,OAAO;AAyChB,eAAeA,OAAO;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}